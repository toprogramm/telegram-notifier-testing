name: Notify Telegram

on:
  push:
    branches:
      - main
      - demo
      - prod
  pull_request:
    types: [closed]
    branches:
      - main
      - demo
      - prod

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (needed to get commit message)
        uses: actions/checkout@v4
        with:
          fetch-depth: 2   # –±–µ—Ä–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏—Å—Ç–æ—Ä–∏–∏, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç

      - name: Prepare message
        id: prepare
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            commit_message=$(git log -1 --pretty=%B)
            echo "MESSAGE<<EOF" >> $GITHUB_OUTPUT
            echo "üöÄ –ü–†–Ø–ú–û–ô –ü–£–® –í –í–ï–¢–ö–£: ${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "üìù –¢–µ–∫—Å—Ç –ö–æ–º–º–∏—Ç–∞: $commit_message" >> $GITHUB_OUTPUT
            echo "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –ö–æ–º–º–∏—Ç: https://github.com/${{ github.repository }}/commit/${{ github.sha }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
            echo "MESSAGE<<EOF" >> $GITHUB_OUTPUT
            echo "‚úÖ –û–ë–ù–û–í–õ–ï–ù–ò–ï: ${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
            echo "üë§ –ê–≤—Ç–æ—Ä: ${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
            echo "üîÄ –ò–∑ –í–µ—Ç–∫–∏: ${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
            echo "üëâ –í –í–µ—Ç–∫—É: ${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
            echo "üîó –°–°—ã–ª–∫–∞ –Ω–∞ –ü—É–ª–†–µ–∫–≤–µ—Å—Ç: ${{ github.event.pull_request.html_url }}" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "No relevant action, skipping." >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

      - name: Send Telegram Notification
        if: steps.prepare.outputs.MESSAGE != ''
        uses: toprogramm/telegram-notifier@latest
        with:
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          chat_id: ${{ secrets.TELEGRAM_CHAT_ID }}
          thread_id: ${{ secrets.TELEGRAM_THREAD_ID }}
          message: ${{ steps.prepare.outputs.MESSAGE }}
